import java.util.regex.Matcher;
import java.util.regex.Pattern;
import java.util.Scanner;

class Solution{

    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        while(in.hasNext()){
            String IP = in.next();
            System.out.println(IP.matches(new MyRegex().pattern));
        }

    }
}

//Write your code here
class MyRegex {
    // have to give specific regex pattern to check x.x.x.x
    // for a one x [01] means first digit can be either 0 or 1, and ? means its optional
    // | indicates or
    public static String pattern = "([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5]).([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])";
    
    // //tried following ath the end saw, that it only requiers a pattern
    // public static void main(String[] args){
    //     // validateIPAddress();
        
    //     Scanner sc = new Scanner(System.in);
        
    //     while(sc.hasNextLine()){
    //         String inputIP = sc.nextLine();
    //         pattern = validateIPAddress(inputIP);
    //     }
    // }

    // public static String validateIPAddress(String inputIP){
    //     String[] splittedIPs = inputIP.split("[.]");
        
    //     if(splittedIPs.length > 3){
    //         return "false";
    //     }
        
    //     for(String splittedIPPart : splittedIPs){
    //         if(Integer.parseInt(splittedIPPart) > 0 && Integer.parseInt(splittedIPPart) < 256){
    //             return "true";
    //         }
    //     }
    //     return "false";
    // }
}